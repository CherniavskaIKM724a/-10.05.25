#include <iostream>
#include <cmath>
#include <windows.h>
using namespace std;


class Triangle {
    double a, b, c; //длины сторон
public:
    // Конструктор(с параметрами)
    Triangle(double A, double B, double C) {
        a = A;
        b = B;
        c = C;
    }
    // Геттеры (получаем знач)
    double getA() {return a;}
    double getB() {return b;}
    double getC() {return c;}

    // Сеттеры (изменение знач)
    void setA(double sideA) {a = sideA;}
    void setB(double sideB) {b = sideB;}
    void setC(double sideC) {c = sideC;}

    // существует ли
    bool exists() {
        return (a + b > c) && (a + c > b) && (b + c > a);
    }

    // P
    double perimetr() {
        return a + b + c;
    }

    // Площадь по Герону
    double area() {
        double p = perimetr() / 2.0;
        return sqrt(p * (p - a) * (p - b) * (p - c));
    }

    // прямоугольный ли
    bool isRight() {
        // Проверяем теорему Пифагора для всех комбинаций сторон
        // Используем небольшую погрешность для сравнения вещественных чисел
        return (a * a ==  (b * b + c * c)) ||
               (b * b == (a * a + c * c))  ||
               (c * c == (a * a + b * b));
    }

    // Выводим
    void show() {
        cout << "Стороны треугольника: a = " << a << ", b = " << b << ", c = " << c << endl;
        if (exists()) {
            cout << "Треугольник существует." << endl;
            cout << "Периметр: " << perimetr() << endl;
            cout << "Площадь: " << area() << endl;
            if (isRight())
                cout << "Треугольник прямоугольный." << endl;
            else
                cout << "Треугольник не является прямоугольным." << endl;
            }
        else {
            cout << "Треугольник с такими сторонами не существует." << endl;}
    }
};

int main() {
    SetConsoleCP(1251);            // +кириллица
    SetConsoleOutputCP(1251);
    double a, b, c;
    cout << "Введите длины сторон треугольника:" << endl;
    cin >> a >> b >> c;

    Triangle t(a, b, c);
    t.show();

    return 0;
}
